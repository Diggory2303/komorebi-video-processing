AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  BaseLambdaExecutionRole:
    Description: Basic AWS Role for Lambda functions execution which can read from SQS queue.
    Default: arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
    Type: String
  KomorebiRecordingDynamoTableArn:
    Description: ARN of the DynamoDB table used to store information of the recordings
    Default: arn:aws:dynamodb:us-east-2:528591436707:table/Recording
    Type: String

Mappings:
  Buckets:
    AmazonConnectAudioRecording:
      Arn: arn:aws:s3:::amazon-connect-s3-calls/*
      Name: amazon-connect-s3-calls
    KomorebiInputVideoRecording:
      Arn: arn:aws:s3:::komorebi-intermediary-recordings/*
      Name: komorebi-intermediary-recordings
    KomorebiOutputVideoRecording:
      Arn: arn:aws:s3:::komorebi-video-recordings/*
      Name: komorebi-video-recordings

Resources:
  VideoProcessingLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: komorebi-lambda-execution-role
      Description: Role that permits Lambda access to S3 and DynamoDB
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref BaseLambdaExecutionRole

  VideoProcessingLambdaExecutionRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: komorebi-lambda-execution-role-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: s3:*
            Resource:
              - arn:aws:s3:::*
          - Effect: Allow
            Action: dynamodb:*
            Resource:
              - !Ref KomorebiRecordingDynamoTableArn
      Roles:
        - !Ref VideoProcessingLambdaExecutionRole

  VideoProcessingFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: komorebi-video-processing
      PackageType: Image
      MemorySize: 500
      Timeout: 300
      EphemeralStorage:
        Size: 2000
      Role:
        Fn::GetAtt:
          - VideoProcessingLambdaExecutionRole
          - Arn
      Environment:
        Variables:
          AC_AUDIO_BUCKET_NAME: !FindInMap [Buckets, AmazonConnectAudioRecording, Name]
          INPUT_BUCKET_NAME: !FindInMap [Buckets, KomorebiInputVideoRecording, Name]
          OUTPUT_BUCKET_NAME: !FindInMap [Buckets, KomorebiOutputVideoRecording, Name]
          AUDIO_FREQUENCY: 8000
    Metadata:
      DockerTag: komorebi-video-processing-v0
      DockerContext: ./lambdas/KomorebiVideoProcessingFunction
      Dockerfile: Dockerfile

  VideoProcessingDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: komorebi-video-processing-dlq

  VideoProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 5
      QueueName: komorebi-video-processing-queue
      ReceiveMessageWaitTimeSeconds: 5
      VisibilityTimeout: 1800
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt VideoProcessingDeadLetterQueue.Arn
        maxReceiveCount: 3

  VideoProcessingLambdaSQSEvent:
    Type: AWS::Lambda::EventSourceMapping
    DependsOn: VideoProcessingQueue
    Properties:
      FunctionName: !Ref VideoProcessingFunction
      EventSourceArn: !GetAtt VideoProcessingQueue.Arn
      FunctionResponseTypes:
        - ReportBatchItemFailures
      BatchSize: 1
